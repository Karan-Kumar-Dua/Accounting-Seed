'use strict';var isDebugEnv=false;
const iStatus={success:100,invalid:-50,unsupported:-100,error:-200},AGR_IFIELD_NAME="agreement",APButtonColor={black:"black",white:"white",whiteOutline:"white-outline"},APButtonType={buy:"buy",pay:"pay",plain:"plain",order:"order",donate:"donate",continue:"continue",checkout:"check-out"},GP_IFIELD_NAME="igp",GPEnvironment={test:"TEST",production:"PRODUCTION"},GPButtonColor={default:"default",black:"black",white:"white"},GPButtonType={buy:"buy",donate:"donate",plain:"plain"},GPButtonSizeMode={static:"static",
fill:"fill"},GPBillingAddressFormat={min:"MIN",full:"FULL"};function setDebugEnv(a){isDebugEnv=isDebugEnv||a}function logDebug(a){a&&(isDebugEnv||loggingEnabled)&&(typeof a==="string"?console.log(JSON.stringify(a)):typeof a==="object"&&(a.label&&a.data?console.log(a.label,JSON.stringify(a.data)):console.log(JSON.stringify(a.label||a.data))))}function parseQueryString(a){let b={};a.replace(/([^?=&]+)(=([^&]*))?/g,function(a,d,e,f){b[d]=f});return b}
function sendCallback(a,b,c){a=Object.assign({},{action:"callback",tokenType:a},{clbParams:b});c=c&&c.contentWindow||window.parent;c.postMessage(a,"*")}function sendError(a,b){window.parent.postMessage({action:"error",tokenType:a,error:b},"*")}
async function execCallback(a){if(!a)throw"execCallback: Invalid callback params";if(typeof a==="string")try{a=JSON.parse(a)}catch(e){console.error(`Failed to resolve callback params object ${JSON.stringify(e)}`);throw"execCallback: Failed to resolve callback params object";}if(!a)throw"execCallback: Callback params object is empty";if(!a.callbackName)throw"execCallback: Invalid callback name";var b=a.callbackName.split(".");const c=b.pop();(b=b.join("."))||(b="window");b=eval(b);let d=a.callbackArgs;
d&&(Array.isArray(d)||(d=[d]));if(a.callbackType==="promise"||a.promise)try{let e=await b[c].apply(b,d);return a.promise&&a.promise.resolve?await execCallback({callbackName:a.promise.resolve,callbackArgs:e}):{response:e}}catch(e){console.error(JSON.stringify(e));return a.promise&&a.promise.reject?await execCallback({callbackName:a.promise.reject,callbackArgs:e?e.message||e:"No error description available"}):{error:exMsg(e,"No error description available")}}else try{return{response:b[c].apply(b,d)}}catch(e){console.error(JSON.stringify(e));
return{error:exMsg(e,"No error description available")}}}function execFunction(a,b){var c=a.split(".");a=c.pop();c=(c=c.join("."))?eval(c):window;return c[a].apply(c,b)}
async function handleCallback(a,b){if(!a.clbParams||!a.clbParams.client)throw"Invalid Callback - parameters are missing";const c=await execCallback(a.clbParams.client);if(a.clbParams.server&&b){a=a.clbParams.server;let d=[];if(a.callbackArgs)Array.isArray(a.callbackArgs)?d=a.callbackArgs:d.push(a.callbackArgs);d.push(c.response||c.error);b.postMessage({action:"callback-result",clbParams:{callbackName:a.promise?c.error?a.promise.reject:a.promise.resolve:a.callbackName,callbackArgs:d}},"*")}else if(c&&
c.error){if(typeof c.error==="string")throw c.error;if(typeof c.error.message==="string")throw c.error.message;console.error("Callback error",JSON.stringify(c.error));throw"Callback error occured, check the logs";}}function roundTo(a,b){return Number(a).toFixed(b)}function roundToNumber(a,b){return Number(roundTo(a,b))}
function chained(a){if(!a||!Array.isArray(a))throw"chained function. Argument must be an array";let b=a.length>0&&a[0];if(!b)return false;if(typeof b==="string"){b=window[b];if(!b)return false}for(let c=1;c<a.length;c++){b=b[a[c]];if(!b)return false}return true}function exMsg(a,b=null){return a?a.message||JSON.stringify(a):b||JSON.stringify(a)}function logAndShow(a){if(a){console.log(a.title||"logAndShow",a.log||a);a.show&&alert(a.show)}else alert("logAndShow parameter is null")};const CARD_NUMBER_IFIELD_NAME="card-number",CVV_IFIELD_NAME="cvv",CARD_NUMBER_TOKEN_NAME="card",CVV_TOKEN_NAME="cvv",ACH_IFIELD_NAME="ach",ACH_TOKEN_NAME="ach",ERROR_FIELD_NAME="card-data-error",THREEDS_JS_URL="https://cdn.cardknox.com/sdk-3ds/1.0.2203.2501-beta/cardknox-3ds.min.js";
var loggingEnabled=false,cardFrameLoaded=false,cvvFrameLoaded=false,achFrameLoaded=false,cardTokenRecieved=false,cvvTokenRecieved=false,achTokenRecieved=false,tokensReceived=false,latestErrorTime=new Date,cachedIFieldStyles={},cachedAccountxKey="",cachedAccountSoftwareName="",cachedAccountSoftwareVersion="",ifieldEventCallbacks={},autoFormat=false,autoFormatSeparator=" ",ifieldDataCache={cardNumberIsValid:false,cardNumberLength:0,cardNumberFormattedLength:0,cardNumberIsEmpty:true,issuer:"unknown",
cvvIsValid:false,cvvLength:0,cvvIsEmpty:true,achLength:0,achIsEmpty:true,achIsValid:false,lastIfieldChanged:""};let amountEvents=["change","blur","keypress"];function getByCustomAttribute(a,b){return document.querySelector("["+a+"='"+b+"']")}function pingIfields(){for(var a=document.getElementsByTagName("iframe"),b=0;b<a.length;b++)/(ifield|igp|iap|agreement).htm/.test(a[b].src)&&a[b].contentWindow.postMessage({action:"ping"},"*")}
window.addEventListener("message",async function(a){try{var b=a.data;if(b.action==="loaded"){log("Message received: ifield loaded");for(var c,d,e=document.getElementsByTagName("iframe"),f=0;f<e.length;f++)if(e[f].contentWindow==a.source){c=e[f].getAttribute("data-ifields-id");d=e[f].getAttribute("data-ifields-placeholder");break}log("Loaded ifield id: "+c);for(var g in cachedIFieldStyles)setIfieldStyle(g,cachedIFieldStyles[g]);setAccount(cachedAccountxKey,cachedAccountSoftwareName,cachedAccountSoftwareVersion);
if(c===CARD_NUMBER_IFIELD_NAME){initDataField(a,c,CARD_NUMBER_TOKEN_NAME,d);cardFrameLoaded=true;autoFormat&&enableAutoFormatting(autoFormatSeparator)}else if(c===CVV_IFIELD_NAME){initDataField(a,c,CVV_TOKEN_NAME,d);cvvFrameLoaded=true}else if(c===ACH_IFIELD_NAME){initDataField(a,c,ACH_TOKEN_NAME,d);achFrameLoaded=true}else if(c===GP_IFIELD_NAME){ckGooglePay.isFrameLoaded=true;ckGooglePay.isEnabled&&!ckGooglePay.isButtonLoaded&&ckGooglePay.load.call(ckGooglePay)}else if(c===AGR_IFIELD_NAME){ckCustomerAgreement.isFrameLoaded=
true;ckCustomerAgreement.isAgreementLoaded||ckCustomerAgreement.loadAgreement.call(ckCustomerAgreement)}}else if(b.action==="token"){log("Message received: token");if(b.data.result==="error"){latestErrorTime=new Date;getByCustomAttribute("data-ifields-id","card-data-error").innerHTML=b.data.errorMessage}else if(b.data.xTokenType===CARD_NUMBER_TOKEN_NAME){getByCustomAttribute("data-ifields-id","card-number-token").value=b.data.xToken;b.data.threeDSJwt&&window.ck3DS&&ck3DS.setJwt(b.data.threeDSJwt);
cardTokenRecieved=true}else if(b.data.xTokenType===CVV_TOKEN_NAME){getByCustomAttribute("data-ifields-id","cvv-token").value=b.data.xToken;cvvTokenRecieved=true}else if(b.data.xTokenType===ACH_TOKEN_NAME){getByCustomAttribute("data-ifields-id","ach-token").value=b.data.xToken;achTokenRecieved=true}}else if(b.action==="autoSubmit"){log("auto submitting form with id "+b.data.formId);document.getElementById(b.data.formId).dispatchEvent(new Event("submit",{bubbles:true,cancelable:true}))}else if(b.action===
"update"){log("Message recieved: update");if(b.xTokenType===CARD_NUMBER_TOKEN_NAME){if(b.data.ifieldValueChanged&&iFieldElementExists(CVV_IFIELD_NAME)){var k={action:"updateIssuer",issuer:b.data.issuer};getByCustomAttribute("data-ifields-id",CVV_IFIELD_NAME).contentWindow.postMessage(k,"*")}ifieldDataCache.cardNumberIsValid=b.data.isValid;ifieldDataCache.cardNumberLength=b.data.cardNumberLength;ifieldDataCache.cardNumberFormattedLength=b.data.length;ifieldDataCache.cardNumberIsEmpty=b.data.isEmpty;
ifieldDataCache.issuer=b.data.issuer;ifieldDataCache.triggeredByIfield=CARD_NUMBER_IFIELD_NAME;if(b.data.ifieldValueChanged)ifieldDataCache.lastIfieldChanged=CARD_NUMBER_IFIELD_NAME}else if(b.xTokenType===CVV_TOKEN_NAME){ifieldDataCache.cvvIsValid=b.data.isValid;ifieldDataCache.cvvLength=b.data.length;ifieldDataCache.cvvIsEmpty=b.data.isEmpty;ifieldDataCache.triggeredByIfield=CVV_IFIELD_NAME;if(b.data.ifieldValueChanged)ifieldDataCache.lastIfieldChanged=CVV_IFIELD_NAME}else if(b.xTokenType===ACH_TOKEN_NAME){ifieldDataCache.achLength=
b.data.length;ifieldDataCache.achIsEmpty=b.data.isEmpty;ifieldDataCache.achIsValid=b.data.isValid;ifieldDataCache.triggeredByIfield=ACH_IFIELD_NAME;if(b.data.ifieldValueChanged)ifieldDataCache.lastIfieldChanged=ACH_IFIELD_NAME}ifieldDataCache.ifieldValueChanged=b.data.ifieldValueChanged;var h=ifieldEventCallbacks[b.data.event];if(h)for(f=0;f<h.length;f++)if(typeof h[f]==="function")h[f](Object.assign({event:b.data.event},ifieldDataCache))}else if(b.action==="callback"){c=null;if(b.tokenType&&b.clbParams.server)if(c=
getIfieldWnd(b.tokenType))c=c.contentWindow;handleCallback(b,c)}else if(b.action==="callback-result"){log("ifields - message received: callback-result (for "+JSON.stringify(b.data)+")");b.clbParams&&execCallback(b.clbParams)}}catch(l){console.error("Error message event listener for "+JSON.stringify(a),JSON.stringify(l))}},false);pingIfields();function initDataField(a,b,c,d){a.source.postMessage({action:"init",tokenType:c,referrer:window.location.toString()},"*");setPlaceholder(b,d)}
function log(a){loggingEnabled&&console.log(a)}function iFieldElementExists(a){a=getByCustomAttribute("data-ifields-id",a);return typeof a!=="undefined"&&a!==null}function elementExists(a){a=document.getElementById(a);return typeof a!=="undefined"&&a!==null}function getIfieldWnd(a){let b=null;switch(a){case GP_IFIELD_NAME:b=ckGooglePay.iframeField;break;case AGR_IFIELD_NAME:b=ckCustomerAgreement.iframeField}b&&b.contentWindow||(b=getByCustomAttribute("data-ifields-id",a));return b}
function getTokens(a,b,c){c=c||6E4;a=a||Function.prototype;b=b||Function.prototype;achTokenRecieved=cvvTokenRecieved=cardTokenRecieved=false;if(iFieldElementExists(CARD_NUMBER_IFIELD_NAME))getByCustomAttribute("data-ifields-id","card-number-token").value="";if(iFieldElementExists(CVV_IFIELD_NAME))getByCustomAttribute("data-ifields-id","cvv-token").value="";if(iFieldElementExists(ACH_IFIELD_NAME))getByCustomAttribute("data-ifields-id","ach-token").value="";setError("");tokensReceived=false;var d={action:"getToken"};
if(iFieldElementExists(CARD_NUMBER_IFIELD_NAME))var e=setInterval(function(){if(cardFrameLoaded){clearInterval(e);getByCustomAttribute("data-ifields-id",CARD_NUMBER_IFIELD_NAME).contentWindow.postMessage(d,"*")}},100);if(iFieldElementExists(CVV_IFIELD_NAME))var f=setInterval(function(){if(cvvFrameLoaded){clearInterval(f);getByCustomAttribute("data-ifields-id",CVV_IFIELD_NAME).contentWindow.postMessage(d,"*")}},100);if(iFieldElementExists(ACH_IFIELD_NAME))var g=setInterval(function(){if(achFrameLoaded){clearInterval(g);
getByCustomAttribute("data-ifields-id",ACH_IFIELD_NAME).contentWindow.postMessage(d,"*")}},100);var k=iFieldElementExists(CARD_NUMBER_IFIELD_NAME),h=iFieldElementExists(CVV_IFIELD_NAME),l=iFieldElementExists(ACH_IFIELD_NAME),m=setInterval(function(){if((k==false||cardTokenRecieved)&&(h==false||cvvTokenRecieved)&&(l==false||achTokenRecieved)){clearInterval(m);tokensReceived=true;setError("");a()}},100),p=(new Date).getTime(),n=setInterval(function(){var a=(new Date).getTime();if(p<latestErrorTime){clearInterval(e);
clearInterval(f);clearInterval(g);clearInterval(n);clearInterval(m);b()}else if(tokensReceived)clearInterval(n);else if(a-p>c){clearInterval(e);clearInterval(f);clearInterval(g);clearInterval(n);clearInterval(m);getByCustomAttribute("data-ifields-id","card-data-error").innerHTML="Transaction timed out";b()}},100)}function clearIfield(a){log("Clearing ifield data for iframe id "+a);getByCustomAttribute("data-ifields-id",a).contentWindow.postMessage({action:"clearData"},"*")}
function setIfieldStyle(a,b){cachedIFieldStyles[a]=b;let c=0;var d=setInterval(function(){if(iFieldElementExists(a)&&(a===CARD_NUMBER_IFIELD_NAME&&cardFrameLoaded||a===CVV_IFIELD_NAME&&cvvFrameLoaded||a===ACH_IFIELD_NAME&&achFrameLoaded)){clearInterval(d);var e={action:"style",data:b};log("Setting ifield style for iframe id "+a);getByCustomAttribute("data-ifields-id",a).contentWindow.postMessage(e,"*")}c+=1;if(c>=50){log("Setting ifield style for iframe id timed out");clearInterval(d)}},100)}
function setError(a){if(iFieldElementExists(ERROR_FIELD_NAME))getByCustomAttribute("data-ifields-id",ERROR_FIELD_NAME).innerHTML=a}function setPlaceholder(a,b){b={action:"setPlaceholder",data:b};log("Setting ifield placeholder for iframe id "+a);getByCustomAttribute("data-ifields-id",a).contentWindow.postMessage(b,"*")}
function setAccount(a,b,c){cachedAccountxKey=a;cachedAccountSoftwareName=b;cachedAccountSoftwareVersion=c;var d={action:"setAccountData",data:{xKey:a,xSoftwareName:b,xSoftwareVersion:c}};if(iFieldElementExists(CARD_NUMBER_IFIELD_NAME))var e=setInterval(function(){if(cardFrameLoaded){clearInterval(e);log("Setting ifield account data for iframe id "+CARD_NUMBER_IFIELD_NAME);getByCustomAttribute("data-ifields-id",CARD_NUMBER_IFIELD_NAME).contentWindow.postMessage(d,"*")}},100);if(iFieldElementExists(CVV_IFIELD_NAME))var f=
setInterval(function(){if(cvvFrameLoaded){clearInterval(f);log("Setting ifield account data for iframe id cvv");getByCustomAttribute("data-ifields-id",CVV_IFIELD_NAME).contentWindow.postMessage(d,"*")}},100);if(iFieldElementExists(ACH_IFIELD_NAME))var g=setInterval(function(){if(achFrameLoaded){clearInterval(g);log("Setting ifield account data for iframe id cvv");getByCustomAttribute("data-ifields-id",ACH_IFIELD_NAME).contentWindow.postMessage(d,"*")}},100)}
function addIfieldKeyPressCallback(a){addIfieldCallback("input",a)}function addIfieldCallback(a,b){ifieldEventCallbacks[a]?ifieldEventCallbacks[a].push(b):ifieldEventCallbacks[a]=[b]}function focusIfield(a){var b={action:"focus"};iFieldElementExists(a)&&getByCustomAttribute("data-ifields-id",a).contentWindow.postMessage(b,"*")}
function enableLogging(){loggingEnabled=true;var a={action:"enableLogging"};if(iFieldElementExists(CARD_NUMBER_IFIELD_NAME)){let b=setInterval(function(){if(cardFrameLoaded){clearInterval(b);getByCustomAttribute("data-ifields-id",CARD_NUMBER_IFIELD_NAME).contentWindow.postMessage(a,"*")}},100)}if(iFieldElementExists(CVV_IFIELD_NAME))var b=setInterval(function(){if(cvvFrameLoaded){clearInterval(b);log("Setting ifield account data for iframe id cvv");getByCustomAttribute("data-ifields-id",CVV_IFIELD_NAME).contentWindow.postMessage(a,
"*")}},100);if(iFieldElementExists(ACH_IFIELD_NAME))var c=setInterval(function(){if(achFrameLoaded){clearInterval(c);log("Setting ifield account data for iframe id ach");getByCustomAttribute("data-ifields-id",ACH_IFIELD_NAME).contentWindow.postMessage(a,"*")}},100)}
function enableAutoSubmit(a){if(elementExists(a)===false)throw"Invalid formId ("+a+")";var b={action:"enableAutoSubmit",data:{formId:a}};if(iFieldElementExists(CARD_NUMBER_IFIELD_NAME))var c=setInterval(function(){if(cardFrameLoaded){clearInterval(c);getByCustomAttribute("data-ifields-id",CARD_NUMBER_IFIELD_NAME).contentWindow.postMessage(b,"*")}},100);if(iFieldElementExists(CVV_IFIELD_NAME))var d=setInterval(function(){if(cvvFrameLoaded){clearInterval(d);getByCustomAttribute("data-ifields-id",CVV_IFIELD_NAME).contentWindow.postMessage(b,
"*")}},100);if(iFieldElementExists(ACH_IFIELD_NAME))var e=setInterval(function(){if(achFrameLoaded){clearInterval(e);getByCustomAttribute("data-ifields-id",ACH_IFIELD_NAME).contentWindow.postMessage(b,"*")}},100)}
function enableAutoFormatting(a){a=a||" ";autoFormat=true;autoFormatSeparator=a;let b={action:"format",data:{formatChar:a}};if(iFieldElementExists(CARD_NUMBER_IFIELD_NAME)){let a=setInterval(function(){if(cardFrameLoaded){clearInterval(a);getByCustomAttribute("data-ifields-id",CARD_NUMBER_IFIELD_NAME).contentWindow.postMessage(b,"*")}},100)}}
function loadScriptAsync(a,b){return new Promise((c,d)=>{if(typeof b!=="undefined")c();else{d=document.createElement("script");d.src=a;d.async=true;d.onload=()=>{c()};var e=document.getElementsByTagName("script")[0];e.parentNode.insertBefore(d,e)}})}
function disable3DS(){let a={action:"disable3DS",data:{}};if(iFieldElementExists(CARD_NUMBER_IFIELD_NAME)){let b=setInterval(function(){if(cardFrameLoaded){clearInterval(b);getByCustomAttribute("data-ifields-id",CARD_NUMBER_IFIELD_NAME).contentWindow.postMessage(a,"*")}},100)}}
function enable3DS(a,b){if(b){loadScriptAsync(THREEDS_JS_URL,window.ck3DS).then(()=>{ck3DS.configuration.onVerifyComplete=b;ck3DS.configuration.enableConsoleLogging=loggingEnabled;ck3DS.initialize3DS(a)});let c={action:"enable3DS",data:{environment:a,verificationEnabled:!!b}};if(iFieldElementExists(CARD_NUMBER_IFIELD_NAME)){let a=setInterval(function(){if(cardFrameLoaded){clearInterval(a);getByCustomAttribute("data-ifields-id",CARD_NUMBER_IFIELD_NAME).contentWindow.postMessage(c,"*")}},100)}}}
function verify3DS(a){typeof window.ck3DS!=="undefined"?ck3DS.verifyTrans(a):log("verify3DS called without using enable3DS first to attach a handler!")}function enableGooglePay(a){ckGooglePay.enableGooglePay.call(ckGooglePay,a)}
window.ckGooglePay={isFrameLoaded:false,isEnabled:false,environment:"",onGetTransactionInfo:"",enableGooglePay:function(a){this.isDebug=isDebugEnv||a&&a.isDebug;this.setIframeField(a&&a.iframeField);this.isFrameLoaded=a&&a.isFrameLoaded;let b=a&&a.amountField;typeof b==="string"&&(b=document.getElementById(b));if(b){const a=function(){return parseFloat(b.value||"0")};let d=a();const e=function(b){b=a();if(b!==d){ckGooglePay.updateAmount();d=b}};amountEvents.forEach((a)=>{b.addEventListener(a,e)})}this.isEnabled=
true;this.isButtonLoaded=false;this.isFrameLoaded?this.load():this.timeoutId=setTimeout(()=>{pingIfields()},500)},updateAmount:function(a){const b=ckGooglePay;if(!b.iframeField){if(!a||!a.iframeField)throw"Failed to update Google Pay Amount. iframe with Google Pay button is not provided";b.setIframeField(a.iframeField)}execCallback({callbackName:b.onGetTransactionInfo}).then((a)=>{if(!a)throw"Failed to update Google Pay Amount. Please try again";if(a.error){console.error("updateGooglePayAmount. Error getting transaction info",
a.error);throw"Failed to update Google Pay Amount. Please check the logs";}b.iframeField.contentWindow.postMessage({action:"callback-result",clbParams:{callbackName:"googlePaySdk.transactionInfo",callbackArgs:a.response}},"*")}).catch((a)=>{console.error("updateGooglePayAmount. An error occured",JSON.stringify(a));throw"Failed to update Google Pay Amount. Please check the logs";})},setIframeField:function(a){this.iframeField=a;if(typeof this.iframeField==="string")this.iframeField=document.getElementById(this.iframeField)||
getByCustomAttribute("data-ifields-id",this.iframeField);if(!this.iframeField||!this.iframeField.contentWindow)this.iframeField=getByCustomAttribute("data-ifields-id",GP_IFIELD_NAME);if(!this.iframeField)throw"Cannot enable Google Pay. iframe with Google Pay button not found. Please refer to documentation.";},load:function(){if(this.isEnabled&&!this.isButtonLoaded){if(!this.iframeField)throw"Cannot load Google Pay. iframe with Google Pay button not found. Please refer to documentation.";if(!this.iframeField.attributes["data-ifields-oninit"]||
!this.iframeField.attributes["data-ifields-oninit"].value)throw"Invalid setup. 'data-ifields-oninit' attribute must be set for Google Pay ifield. Please refer to documentation";let a=execFunction(this.iframeField.attributes["data-ifields-oninit"].value);if(!a)throw"Invalid setup. 'data-ifields-oninit' must be a function that returns a valid object. Please refer to documentation";this.environment=a.environment;this.onGetTransactionInfo=a.onGetTransactionInfo;a.merchantInfo.merchantOrigin=window.location.hostname;
a.gpLoadedCallback="ckGooglePay.gpLoadedCallback";this.iframeField.contentWindow.postMessage({action:"init",tokenType:GP_IFIELD_NAME,params:a},"*")}},gpLoadedCallback:function(a){(this.isButtonLoaded=a&&a.status===iStatus.success)&&clearTimeout(this.timeoutId);this.isDebug&&console.log("GP isButtonLoaded",this.isButtonLoaded)},authorize:function(a){return new Promise(function(b,c){var d=new XMLHttpRequest;d.open("POST","https://cardknoxdev.com/gpay/home/AuthorizeFull");d.onload=function(){this.status>=
200&&this.status<300?b(d.response):c({status:this.status,statusText:d.statusText})};d.onerror=function(){c({status:this.status,statusText:d.statusText})};d.setRequestHeader("Content-Type","application/json");d.send(JSON.stringify(a))})}};function enableApplePay(a){ckApplePay.enableApplePay(a)}
window.ckApplePay={enableApplePay:function(a){this.isDebug=isDebugEnv||a&&a.isDebug;window.apReq=null;const b=a&&a.initFunction;try{if(typeof b==="function")window.apReq=b();else if(typeof b==="string")window.apReq=execFunction(b);else throw"params.initFunction is required. Must be a function to initialize Apple Pay";if(!window.apReq)throw"Invalid response from init function. Please refer to documentation";applePaySdk.init(window.apReq)}catch(d){throw`Cannot enable Apple Pay: ${d}`;}let c=a&&a.amountField;
typeof c==="string"&&(c=document.getElementById(c));if(c&&window.apReq){const a=function(){return roundTo(c.value||"0",2)};let b=a();const f=this,g=async function(c){try{let c=a();if(c!==b){ckApplePay.updateAmount();b=c}}catch(h){console.error("Amount Change failed:",exMsg(h));f.isDebug&&alert("Amount Change failed: "+exMsg(h))}};amountEvents.forEach((a)=>{c.addEventListener(a,g)})}pingIfields()},updateAmount:function(){window.apReq&&execCallback({callbackName:window.apReq.onGetTransactionInfo}).then((a)=>
{if(!a)throw"Failed to update Apple Pay Amount. Please try again";if(a.error){console.error("updateApplePayAmount. Error getting transaction info",a.error);throw"Failed to update Apple Pay Amount. please check the logs";}execCallback({callbackName:"applePaySdk.setTransactionInfo",callbackArgs:a.response})}).catch((a)=>{console.error("updateApplePayAmount. An error occured",JSON.stringify(a));throw"Failed to update Apple Pay Amount. please check the logs";})},getSession:function(a){return new Promise(function(b,
c){try{var d=new XMLHttpRequest;d.open("POST","https://cardknoxdev.com/aptest/home/CreateSession");d.onload=function(){this.status>=200&&this.status<300?b(d.response):c({status:this.status,statusText:d.response})};d.onerror=function(){c({status:this.status,statusText:d.statusText})};d.setRequestHeader("Content-Type","application/json");d.send(JSON.stringify({validationUrl:a}))}catch(e){setTimeout(function(){alert("getApplePaySession error: "+exMsg(e))},100)}})},authorize:function(a){return new Promise(function(b,
c){var d=new XMLHttpRequest;d.open("POST","https://cardknoxdev.com/aptest/home/Authorize");d.onload=function(){this.status>=200&&this.status<300?b(d.response):c({status:this.status,statusText:d.statusText})};d.onerror=function(){c({status:this.status,statusText:d.statusText})};d.setRequestHeader("Content-Type","application/json");d.send(JSON.stringify(a))})}};
window.ckCustomerAgreement={enableAgreement:function(a){this.isDebug=isDebugEnv||a&&a.isDebug;a.iframeField&&this.setIframeField(a.iframeField);this.reqAgreement=Object.assign({},{xKey:a.xKey,autoAgree:a.autoAgree,callbackName:a.callbackName,referrer:window.location.toString(),agreementLoadedCallback:"ckCustomerAgreement.agreementLoadedCallback",isDebug:a.isDebug});this.isAgreementLoaded=false;this.isFrameLoaded?this.loadAgreement():setTimeout(()=>{pingIfields()},100)},loadAgreement:function(){this.iframeField.contentWindow.postMessage({action:"init",
tokenType:AGR_IFIELD_NAME,params:this.reqAgreement},"*")},getToken:function(){return new Promise((a,b)=>{this["getToken-resolve"]=a;this["getToken-reject"]=b;sendCallback(AGR_IFIELD_NAME,{client:{callbackName:"custAgreement.sendAcceptance",callbackType:"promise"},server:{promise:{resolve:"ckCustomerAgreement.callbackSuccess",reject:"ckCustomerAgreement.callbackReject"},callbackArgs:"getToken"}},this.iframeField)})},setIframeField:function(a){this.iframeField=a;if(typeof this.iframeField==="string")this.iframeField=
document.getElementById(this.iframeField)||getByCustomAttribute("data-ifields-id",this.iframeField);if(!this.iframeField||!this.iframeField.contentWindow)this.iframeField=getByCustomAttribute("data-ifields-id",AGR_IFIELD_NAME);if(!this.iframeField)throw"Cannot enable Customer Agreement. iframe with Customer Agreement not found. Please refer to documentation.";},agreementLoadedCallback:function(a){a&&a.status!==iStatus.success&&console.error("Failed to load Customer Agreement",a.statusText);this.isAgreementLoaded=
a&&a.status===iStatus.success},callbackSuccess:function(a,b){try{b=JSON.parse(b)}catch(c){}this[a+"-resolve"](b)},callbackReject:function(a,b){try{b=JSON.parse(b)}catch(c){}this[a+"-reject"](b)}};const applePaySdk={defPaymentRequest:{buttonOptions:{buttonContainer:null,buttonColor:APButtonColor.black,buttonType:APButtonType.pay,width:null,height:null,minWidth:null,minHeight:null},walletCheckEnabled:true,applicationData:null,merchantIdentifier:null,merchantCapabilities:["supports3DS"],supportedNetworks:["amex","discover","masterCard","visa"],supportedCountries:[],countryCode:"US",currencyCode:"USD",requiredBillingContactFields:["postalAddress","name"],billingContact:null,shippingContact:null,
shippingType:null,shippingMethods:[],total:null,lineItems:null,setShippingMethods:function(a){this.shippingMethods=a}},sessionCallbacks:{clbNamePaymentComplete:null,clbNameCancel:null,onCancel:function(a){self=applePaySdk;console.error("Apple Pay Session canceled",JSON.stringify(a));self.sessionCallbacks.clbNameCancel&&execCallback({callbackName:self.sessionCallbacks.clbNameCancel,callbackArgs:a})},clbNameValidateMerchant:null,onValidateMerchant:async function(a){const b=applePaySdk;try{if(!a.isTrusted){console.error("onValidateMerchant",
"Not trusted");b.session.abort()}const c=await b.buildCallback(b.sessionCallbacks.clbNameValidateMerchant,a.validationURL,"promise"),d=JSON.parse(c);b.session.completeMerchantValidation(d)}catch(c){console.error("onValidateMerchant error",exMsg(c));b.session.abort()}},clbNamePaymentAuthorize:null,onPaymentAuthorize:async function(a){const b=applePaySdk;try{if(!a.isTrusted){console.error("onPaymentAuthorize","Not trusted");b.session.abort()}const c=await b.buildCallback(b.sessionCallbacks.clbNamePaymentAuthorize,
a.payment,"promise");b.session.completePayment(ApplePaySession.STATUS_SUCCESS);b.sessionCallbacks.clbNamePaymentComplete&&execCallback({callbackName:b.sessionCallbacks.clbNamePaymentComplete,callbackArgs:{response:c}})}catch(c){console.error("onPaymentAuthorize error",exMsg(c));b.session.abort();b.sessionCallbacks.clbNamePaymentComplete&&execCallback({callbackName:b.sessionCallbacks.clbNamePaymentComplete,callbackArgs:{error:c}})}},clbNameShippingContactSelected:null,onShippingContactSelected:async function(a){const b=
applePaySdk;try{if(!a.isTrusted){console.error("onShippingContactSelected","Not trusted");b.session.abort()}const c=await b.buildCallback.call(b,b.sessionCallbacks.clbNameShippingContactSelected,a.shippingContact,"promise");b.session.completeShippingContactSelection(ApplePaySession.STATUS_SUCCESS,c.shippingMethods,c.total,c.lineItems)}catch(c){console.error("onShippingContactSelected error",JSON.stringify(c));b.session.completeShippingContactSelection(ApplePaySession.STATUS_FAILURE)}},clbNameShippingMethodSelected:null,
onShippingMethodSelected:async function(a){const b=applePaySdk;try{if(!a.isTrusted){console.error("onShippingMethodSelected","Not trusted");b.session.abort()}const c=await b.buildCallback.call(b,b.sessionCallbacks.clbNameShippingMethodSelected,a.shippingMethod,"promise");b.session.completeShippingMethodSelection(ApplePaySession.STATUS_SUCCESS,c.total,c.lineItems)}catch(c){console.error("onShippingMethodSelected error",JSON.stringify(c));b.session.completeShippingMethodSelection(ApplePaySession.STATUS_FAILURE)}},
clbNamePaymentMethodSelected:null,onPaymentMethodSelected:async function(a){const b=applePaySdk;try{if(!a.isTrusted){console.error("onPaymentMethodSelected","Not trusted");b.session.abort()}const c=await b.buildCallback.call(b,b.sessionCallbacks.clbNamePaymentMethodSelected,a.paymentMethod,"promise");b.session.completePaymentMethodSelection(c.total,c.lineItems)}catch(c){console.error("onPaymentMethodSelected error",JSON.stringify(c));b.session.abort()}}},beforeProcessPayment:async function(){try{const a=
applePaySdk;if(typeof a.onBeforeProcessPayment==="string"){const b=await a.buildCallback(a.onBeforeProcessPayment,null,"promise");if(b!==iStatus.success)throw b;}return iStatus.success}catch(a){throw a;}},init:function(a){const b=function(){if(!window.ApplePaySession||!ApplePaySession.canMakePayments())throw"Apple Pay not supported";if(!a)throw"paymentRequest parameter is required. For more information please refer to documentation";if(!a.buttonOptions||!a.buttonOptions.buttonContainer||typeof a.buttonOptions.buttonContainer!==
"string")throw"paymentRequest.buttonOptions.buttonContainer is required. Must be an id of div element where Apple Pay button will be loaded";if(!a.onGetTransactionInfo||typeof a.onGetTransactionInfo!=="string")throw"paymentRequest.onGetTransactionInfo is required. Must be a name of a function that returns a line item(ApplePayLineItem) representing the total for the payment. For more info please refer to documentation";if(!a.onValidateMerchant||typeof a.onValidateMerchant!=="string")throw"paymentRequest.onValidateMerchant is required. Must be a name of a function that validates  Apple Pay session. For more info please refer to documentation";
if(!a.onPaymentAuthorize||typeof a.onPaymentAuthorize!=="string")throw"paymentRequest.onPaymentAuthorize is required. Must be a name of a function that authorizes payment with Gateway. For more info please refer to documentation";if(a.onPaymentComplete&&typeof a.onPaymentComplete!=="string")throw"paymentRequest.onPaymentComplete must be a name of a function that handles response from the Gateway. For more info please refer to documentation";},c=function(){return ApplePaySession.supportsVersion(2)?
2:1};try{const d=this;this.isDebug=a.isDebug;b();Object.assign(this.defPaymentRequest,a);this.buildCallback(a.onGetTransactionInfo).then(function(a){d.setTransactionInfo.call(d,a)}).catch(function(a){console.error("onGetTransactionInfo error",exMsg(a))});a.onGetShippingMethods&&this.buildCallback(a.onGetShippingMethods).then(function(a){d.defPaymentRequest.setShippingMethods.call(d.defPaymentRequest,a)}).catch(function(a){console.error("onGetShippingMethods error",exMsg(a))});d.defPaymentRequest.walletCheckEnabled?
ApplePaySession.canMakePaymentsWithActiveCard(d.defPaymentRequest.merchantIdentifier).then(function(b){if(!b)throw"Apple Pay not supported";d.showApplePayButton();chained([a,"onAPButtonLoaded"])&&execCallback({callbackName:a.onAPButtonLoaded,callbackArgs:{status:iStatus.success}})}).catch(function(a){throw a;}):setTimeout(function(){d.showApplePayButton();chained([a,"onAPButtonLoaded"])&&execCallback({callbackName:a.onAPButtonLoaded,callbackArgs:{status:iStatus.success}})},10);this.onBeforeProcessPayment=
a.onBeforeProcessPayment;if(a.onValidateMerchant)this.sessionCallbacks.clbNameValidateMerchant=a.onValidateMerchant;if(a.onPaymentAuthorize)this.sessionCallbacks.clbNamePaymentAuthorize=a.onPaymentAuthorize;if(a.onPaymentComplete)this.sessionCallbacks.clbNamePaymentComplete=a.onPaymentComplete;if(a.onCancel)this.sessionCallbacks.clbNameCancel=a.onCancel;if(a.onShippingContactSelected)this.sessionCallbacks.clbNameShippingContactSelected=a.onShippingContactSelected;if(a.onShippingMethodSelected)this.sessionCallbacks.clbNameShippingMethodSelected=
a.onShippingMethodSelected;if(a.onPaymentMethodSelected)this.sessionCallbacks.clbNamePaymentMethodSelected=a.onPaymentMethodSelected;this.defPaymentRequest.version=c()}catch(d){console.error("Apple Pay initialization failed",JSON.stringify(d));chained([a,"onAPButtonLoaded"])&&(d==="Apple Pay not supported"?execCallback({callbackName:a.onAPButtonLoaded,callbackArgs:{status:iStatus.unsupported}}):execCallback({callbackName:a.onAPButtonLoaded,callbackArgs:{status:iStatus.error,reason:"Failed to initialize Apple Pay. Please check the logs"}}))}},
setTransactionInfo:function(a){if(a){this.defPaymentRequest.total=a.total;this.defPaymentRequest.lineItems=a.lineItems}},getPaymentRequest:function(){return{merchantCapabilities:this.defPaymentRequest.merchantCapabilities,supportedNetworks:this.defPaymentRequest.supportedNetworks,supportedCountries:this.defPaymentRequest.supportedCountries,countryCode:this.defPaymentRequest.countryCode,currencyCode:this.defPaymentRequest.currencyCode,requiredBillingContactFields:this.defPaymentRequest.requiredBillingContactFields,
billingContact:this.defPaymentRequest.billingContact,requiredShippingContactFields:this.defPaymentRequest.requiredShippingContactFields,shippingContact:this.defPaymentRequest.shippingContact,shippingMethods:this.defPaymentRequest.shippingMethods,total:this.defPaymentRequest.total,lineItems:this.defPaymentRequest.lineItems}},createSession:function(){const a=this.getPaymentRequest();this.session=new ApplePaySession(this.defPaymentRequest.version,a);this.session.merchantIdentifier=this.defPaymentRequest.merchantIdentifier;
this.session.oncancel=this.sessionCallbacks.onCancel;if(this.sessionCallbacks.clbNameValidateMerchant)this.session.onvalidatemerchant=this.sessionCallbacks.onValidateMerchant;if(this.sessionCallbacks.clbNamePaymentAuthorize)this.session.onpaymentauthorized=this.sessionCallbacks.onPaymentAuthorize;if(this.sessionCallbacks.clbNameShippingContactSelected)this.session.onshippingcontactselected=this.sessionCallbacks.onShippingContactSelected;if(this.sessionCallbacks.clbNameShippingMethodSelected)this.session.onshippingmethodselected=
this.sessionCallbacks.onShippingMethodSelected;if(this.sessionCallbacks.clbNamePaymentMethodSelected)this.session.onpaymentmethodselected=this.sessionCallbacks.onPaymentMethodSelected;return this.session},showApplePayButton:function(){HTMLCollection.prototype[Symbol.iterator]=Array.prototype[Symbol.iterator];var a=[".apple-pay-button.visible { ","visibility: visible; ","} ",".apple-pay-button:active { ","background-color: rgb(152, 152, 152); ","}",".apple-pay-button { ","visibility: hidden;","cursor: pointer;",
"-webkit-appearance: -apple-pay-button;","-apple-pay-button-type: "+(this.defPaymentRequest.buttonOptions.buttonType||APButtonType.pay)+";","-apple-pay-button-style: "+(this.defPaymentRequest.buttonOptions.buttonColor||APButtonColor.black)+";"];this.defPaymentRequest.buttonOptions.minWidth&&a.push("min-width: "+this.defPaymentRequest.buttonOptions.minWidth+"px;");this.defPaymentRequest.buttonOptions.minHeight&&a.push("min-height: "+this.defPaymentRequest.buttonOptions.minHeight+"px;");this.defPaymentRequest.buttonOptions.width&&
a.push("width: "+this.defPaymentRequest.buttonOptions.width+";");this.defPaymentRequest.buttonOptions.height&&a.push("height: "+this.defPaymentRequest.buttonOptions.height+";");a.push("}");a=a.join("\n");const b=document.getElementById(this.defPaymentRequest.buttonOptions.buttonContainer);if(!b)throw"Invalid buttonContainer. Must be an id of div element where Apple Pay button will be loaded";const c=document.head||document.getElementsByTagName("head")[0],d=document.createElement("style");c.appendChild(d);
d.type="text/css";d.styleSheet?d.styleSheet.cssText=a:d.appendChild(document.createTextNode(a));b.className=b.className+" apple-pay-button";b.className=b.className+" visible";b.addEventListener("click",this.payButtonClicked)},payButtonClicked:async function(a){try{const a=applePaySdk.createSession.call(applePaySdk),c=await applePaySdk.beforeProcessPayment();if(c!==iStatus.success)throw c;a.begin()}catch(b){console.error("Apple Pay session error",exMsg(b))}},buildCallback:async function(a,b,c){try{const d=
await execCallback({callbackName:a,callbackType:c,callbackArgs:b});if(d.error)throw d.error;return d.response}catch(d){console.error("buildCallback",exMsg(d));throw d;}},callbackSuccess:function(a,b){this[a+"-resolve"](b)},callbackReject:function(a,b){this[a+"-reject"](b)}};